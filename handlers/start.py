from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters.command import Command
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession

from src.models import User, UserRole
from src.keyboards.reply import get_admin_menu_keyboard, get_manager_menu_keyboard, get_barista_menu_keyboard, get_phone_request_keyboard
from src.fsm.states import RegistrationStates


router = Router()

@router.message(Command("start"))
async def cmd_start(
    message: Message,
    state: FSMContext,
    current_user: User, # –í–Ω–µ–¥—Ä—è–µ—Ç—Å—è –∏–∑ UserRegisterMiddleware
    is_new_pending_user: bool = False # –§–ª–∞–≥ –∏–∑ UserRegisterMiddleware
) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start.
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ.
    """
    if is_new_pending_user:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π –∏ –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å PENDING, –∑–∞–ø—É—Å–∫–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–ª–æ—É
        await message.answer(
            f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! üëã\n"
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–º–µ–Ω–∞–º–∏.\n"
            "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ –±—ã—Å—Ç—Ä—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤'):"
        )
        await state.set_state(RegistrationStates.waiting_for_name)
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        if current_user.role == UserRole.ADMIN:
            reply_keyboard = get_admin_menu_keyboard()
            await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {current_user.first_name}! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=reply_keyboard)
        elif current_user.role == UserRole.MANAGER:
            reply_keyboard = get_manager_menu_keyboard()
            await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, –£–ø—Ä–∞–≤–ª—è—é—â–∏–π {current_user.first_name}! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=reply_keyboard)
        elif current_user.role == UserRole.BARISTA:
            reply_keyboard = get_barista_menu_keyboard()
            await message.answer(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, –ë–∞—Ä–∏—Å—Ç–∞ {current_user.first_name}! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=reply_keyboard)
        elif current_user.role == UserRole.PENDING:
            await message.answer(
                f"–ú—ã –≤–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, {current_user.first_name}! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ.\n"
                "–ú—ã —Å–æ–æ–±—â–∏–º –≤–∞–º, –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏—Ç—Å—è."
            )
        else:
            await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {current_user.first_name}! –í–∞—à–∞ —Ä–æ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è.")
