version: "3.9"
services:
  db:
    imageports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d coffeeteam"]
      interval: 10s
      timeout: 5s
      ret: Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - ADMIN_IDS=${ADMIN_IDS}
      - MANAGER_IDS=${MANAGER_IDS}
    volumes:
      - ./src:/app

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - ADMIN_IDS=${ADMIN_IDS}
      - MANAGER_IDS=${MANAGER_IDS}
    command: celery -A src.core.celery_app worker -l info
    volumes:
      - ./src:/app

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
      - ADMIN_IDS=${ADMIN_IDS}
      - MANAGER_IDS=${MANAGER_IDS}
    command `worker`, `celery_beat`.
*   `depends_on`: Указывает порядок запуска сервисов и условия их готовности.
*   `environment`: Передает переменные окружения в контейнеры.
*   `volumes`:  Монтирует локальную директорию `src` в контейнеры, чтобы изменения кода сразу применялись (dev mode).

**Dockerfile:**
