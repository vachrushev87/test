from telegram import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup
from typing import Optional, List
from src.core.models import Role

def confirm_keyboard() -> InlineKeyboardButton:
    keyboard = [[
            InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"confirm:{action_data}"),
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_operation")
        ]]
    return InlineKeyboardMarkup(keyboard)


def cancel_keyboard() -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π '–û—Ç–º–µ–Ω–∞'."""
    keyboard = [[InlineKeyboardButton("üö´ –û—Ç–º–µ–Ω–∞", callback_data="cancel_operation")]]
    return InlineKeyboardMarkup(keyboard)



def main_admin_manager_keyboard() -> ReplyKeyboardMarkup:
    """–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ."""
    keyboard = [
        ["üìà –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–º–µ–Ω", "‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–∞–º–∏"],
        ["üè¢ –ö–æ—Ñ–µ–π–Ω–∏", "üë®‚Äçüíª –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"],
        ["‚ùì –ü–æ–º–æ—â—å"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)

def admin_cafe_management_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—Ñ–µ–π–Ω—è–º–∏ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    keyboard = [
        [InlineKeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å", callback_data="admin_create_cafe")],
        [InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="admin_edit_cafe")],
        [InlineKeyboardButton("‚ùóÔ∏è –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å/–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data="admin_toggle_cafe_status")],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_admin_main")],
    ]
    return InlineKeyboardMarkup(keyboard)

def admin_user_management_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    keyboard = [
        [InlineKeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å", callback_data="admin_create_user")],
        [InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="admin_edit_user")],
        [InlineKeyboardButton("‚ùóÔ∏è –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å/–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å", callback_data="admin_toggle_user_status")],
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_admin_main")],
    ]
    return InlineKeyboardMarkup(keyboard)

def cafe_edit_options_keyboard(cafe_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ—Ñ–µ–π–Ω–∏."""
    keyboard = [
        [InlineKeyboardButton("üìù –ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit_cafe_name:{cafe_id}")],
        [InlineKeyboardButton("üìç –ê–¥—Ä–µ—Å", callback_data=f"edit_cafe_address:{cafe_id}")],
        [InlineKeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data=f"edit_cafe_contacts:{cafe_id}")],
        [InlineKeyboardButton("üìú –û–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit_cafe_description:{cafe_id}")],
        [InlineKeyboardButton("‚è∞ –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã", callback_data=f"edit_cafe_hours:{cafe_id}")],
        [InlineKeyboardButton("ü§¥ –£–ø—Ä–∞–≤–ª—è—é—â–∏–π", callback_data=f"edit_cafe_manager:{cafe_id}")],
        [InlineKeyboardButton("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏", callback_data=f"edit_cafe_save_exit:{cafe_id}")],
        [InlineKeyboardButton("üö´ –û—Ç–º–µ–Ω–∞", callback_data="cancel_operation")],
    ]
    return InlineKeyboardMarkup(keyboard)

def user_edit_options_keyboard(user_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ–ø—Ü–∏–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    keyboard = [
        [InlineKeyboardButton("üìù –ò–º—è/–§–∞–º–∏–ª–∏—è", callback_data=f"edit_user_name:{user_id}")],
        [InlineKeyboardButton("üìû –¢–µ–ª–µ—Ñ–æ–Ω", callback_data=f"edit_user_phone:{user_id}")],
        [InlineKeyboardButton("üé≠ –†–æ–ª—å", callback_data=f"edit_user_role:{user_id}")],
        [InlineKeyboardButton("üè¢ –ö–æ—Ñ–µ–π–Ω—è", callback_data=f"edit_user_cafe:{user_id}")],
        [InlineKeyboardButton("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏", callback_data=f"edit_user_save_exit:{user_id}")],
        [InlineKeyboardButton("üö´ –û—Ç–º–µ–Ω–∞", callback_data="cancel_operation")],
    ]
    return InlineKeyboardMarkup(keyboard)

def select_role_keyboard(current_role: Optional[Role] = None) -> InlineKeyboardMarkup:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    buttons = []
    for role in Role:
        if current_role is None or role != current_role:
            buttons.append(InlineKeyboardButton(role.value.capitalize(), callback_data=f"select_user_role:{role.name}"))

    rows = [buttons[i:i + 2] for i in range(0, len(buttons), 2)]
    rows.append([InlineKeyboardButton("üö´ –û—Ç–º–µ–Ω–∞", callback_data="cancel_operation")])
    return InlineKeyboardMarkup(rows)

def generate_entity_list_keyboard(entities: List, prefix: str, page: int = 0, page_size: int = 5) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º —Å—É—â–Ω–æ—Å—Ç–µ–π (–∫–æ—Ñ–µ–µ–Ω/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π) –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.

    Args:
        entities (List): –°–ø–∏—Å–æ–∫ –æ–±—ä–µ–∫—Ç–æ–≤ —Å—É—â–Ω–æ—Å—Ç–µ–π (Cafe, User).
        prefix (str): –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è callback_data, –Ω–∞–ø—Ä–∏–º–µ—Ä, "select_cafe" –∏–ª–∏ "select_user".
        page (int): –¢–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.
        page_size (int): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—É—â–Ω–æ—Å—Ç–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.

    Returns:
        InlineKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —Å—É—â–Ω–æ—Å—Ç–µ–π –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.
    """
    keyboard = []
    total_pages = (len(entities) + page_size - 1) // page_size

    start_idx = page * page_size
    end_idx = min(start_idx + page_size, len(entities))

    for i in range(start_idx, end_idx):
        entity = entities[i]
        label = ""
        # –ü–æ—Ä—è–¥–æ–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–∂–µ–Ω: —Å–Ω–∞—á–∞–ª–∞ 'full_name' –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–∞—Ç–µ–º 'name' –¥–ª—è –∫–æ—Ñ–µ–µ–Ω, –∏ —Ç.–¥.
        if hasattr(entity, 'full_name'): 
            label = entity.full_name
        elif hasattr(entity, 'name'):
            label = entity.name
        elif hasattr(entity, 'title'):
            label = entity.title
        elif hasattr(entity, 'id'):
            label = f"ID: {entity.id}"

        if hasattr(entity, 'is_active'):
            label += " (–ê–∫—Ç–∏–≤–µ–Ω)" if entity.is_active else " (–ù–µ–∞–∫—Ç–∏–≤–µ–Ω)"

        keyboard.append([InlineKeyboardButton(label, callback_data=f"{prefix}:{entity.id}")])

    nav_buttons = []
    if page > 0:
        nav_buttons.append(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"{prefix}_page:{page - 1}"))
    if page < total_pages - 1:
        nav_buttons.append(InlineKeyboardButton("‚û°Ô∏è –í–ø–µ—Ä–µ–¥", callback_data=f"{prefix}_page:{page + 1}"))

    if nav_buttons:
        if len(nav_buttons) == 2:
            nav_buttons.insert(1, InlineKeyboardButton(f"{page + 1}/{total_pages}", callback_data="ignore_page_num_btn"))
        elif total_pages > 1:
            nav_buttons.append(InlineKeyboardButton(f"{page + 1}/{total_pages}", callback_data="ignore_page_num_btn"))

        keyboard.append(nav_buttons)

    keyboard.append([InlineKeyboardButton("üö´ –û—Ç–º–µ–Ω–∞", callback_data="cancel_operation")])
    return InlineKeyboardMarkup(keyboard)

def main_barista_keyboard() -> ReplyKeyboardMarkup:
    """–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –±–∞—Ä–∏—Å—Ç–∞."""
    keyboard = [
        ["üóì –ú–æ–∏ —Å–º–µ–Ω—ã", "‚ú® –°–≤–æ–±–æ–¥–Ω—ã–µ —Å–ª–æ—Ç—ã"],
        ["‚ùì –ü–æ–º–æ—â—å"]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True, one_time_keyboard=False)
